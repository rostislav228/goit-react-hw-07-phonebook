{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactElement/ContactListItem.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/Filter/Filter.js","redux/contacts/contactsAction.js","services/jsonServer.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","Section","title","children","ContactForm","addContact","useState","name","setName","number","setNumber","changeHandler","e","target","value","console","log","reset","onSubmit","preventDefault","contact","id","uuid","className","s","form","input","type","placeholder","onChange","disabled","length","ContactListItem","onDelete","li","onClick","ContactList","contacts","map","Filter","createAction","deleteContact","setFilter","axios","defaults","baseURL","getContactsJ","a","get","data","addContactJ","post","response","deleteContactJ","delete","createAsyncThunk","API","getContacts","state","phonebook","getFilter","filter","getLoader","isLoader","getError","error","App","useSelector","dispatch","useDispatch","addContacts","contactDelete","alert","useEffect","deleteContactbyId","status","addContactApp","newName","toLowerCase","includes","trim","filterContactsByName","contactReducer","createReducer","payload","fulfilled","_","filterReducer","pending","rejected","contactsReducer","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1699f74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1ix6T\",\"input\":\"ContactForm_input__34Xmm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactListItem_li__3uqES\"};","import PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nimport uuid from \"react-uuid\";\r\n\r\nfunction ContactForm({ addContact }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const changeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        console.log(\"error\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    addContact(contact);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={s.form}>\r\n      <label>\r\n        Name:\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"enter name\"\r\n          onChange={changeHandler}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number:\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          placeholder=\"enter number\"\r\n          onChange={changeHandler}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" disabled={!name.length || !number.length}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// class ContactForm extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n// changeHandler = (e) => {\r\n//   const { name, value } = e.target;\r\n\r\n//   setState({\r\n//     [name]: value,\r\n//   });\r\n// };\r\n\r\n// submitHandler = (e) => {\r\n//   e.preventDefault();\r\n//   const { name, number } = state;\r\n//   const contact = {\r\n//     id: uuid(),\r\n//     name: name,\r\n//     number: number,\r\n//   };\r\n//   props.addContact(contact);\r\n\r\n//   reset();\r\n// };\r\n\r\n// reset = () => {\r\n//   setState({\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   });\r\n// };\r\n\r\n//   render() {\r\n//     const { name, number } = state;\r\n// return (\r\n//   <form onSubmit={submitHandler} className={s.form}>\r\n//     <label>\r\n//       Name:\r\n//       <input\r\n//         className={s.input}\r\n//         type=\"text\"\r\n//         name=\"name\"\r\n//         value={name}\r\n//         placeholder=\"enter name\"\r\n//         onChange={changeHandler}\r\n//       />\r\n//     </label>\r\n\r\n//     <label>\r\n//       Number:\r\n//       <input\r\n//         className={s.input}\r\n//         type=\"tel\"\r\n//         name=\"number\"\r\n//         value={number}\r\n//         placeholder=\"enter number\"\r\n//         onChange={changeHandler}\r\n//       />\r\n//     </label>\r\n//     <button type=\"submit\" disabled={!name.length || !number.length}>\r\n//       Add contact\r\n//     </button>\r\n//   </form>\r\n// );\r\n//   }\r\n// }\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactListItem.module.css\";\r\n\r\nfunction ContactListItem({ name, number, onDelete }) {\r\n  return (\r\n    <li className={s.li}>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={onDelete}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactElement/ContactElement\";\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts ? (\r\n        contacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => onDelete(id)}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>no contact with such name in your phone </p>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ onChange }) {\r\n  return (\r\n    <label>\r\n      Filter:\r\n      <input type=\"text\" name=\"filter\" onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/addContact\");\r\nconst deleteContact = createAction(\"contacts/deleteContact\");\r\nconst setFilter = createAction(\"contacts/setFilter\");\r\n\r\n// const addContactR = value => ({\r\n//   type: 'contacts/addContact',\r\n//   payload: value,\r\n// });\r\n\r\n// const deleteContactR = contactId => ({\r\n//   type: 'contacts/deleteContact',\r\n//   payload: contactId,\r\n// });\r\n\r\n// const setContactR = contactsArr => ({\r\n//   type: 'contacts/setContacts',\r\n//   payload: contactsArr,\r\n// });\r\n\r\n// const setFilterR = value => ({\r\n//   type: 'contacts/setFilter',\r\n//   payload: value,\r\n// });\r\n\r\nexport { addContact, deleteContact, setFilter };\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:1010\";\r\n\r\nexport const getContactsJ = async () => {\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const addContactJ = async (data) => {\r\n  try {\r\n    const response = await axios.post(\"/contacts\", data);\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const deleteContactJ = async (data) => {\r\n  try {\r\n    const response = await axios.delete(`/contacts/${data}`);\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as API from \"../../services\";\r\n\r\nexport const getContactsJ = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async () => {\r\n    try {\r\n      const contacts = await API.getContactsJ();\r\n      return contacts;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n);\r\n","export const getContacts = (state) => state.phonebook.contacts;\r\nexport const getFilter = (state) => state.phonebook.filter;\r\nexport const getLoader = (state) => state.phonebook.isLoader;\r\nexport const getError = (state) => state.phonebook.error;\r\n","import { useEffect } from \"react\";\nimport Section from \"./components/Section/Section.js\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteContact,\n  addContact,\n  setFilter,\n} from \"./redux/contacts/contactsAction\";\nimport * as API from \"./services\";\nimport { getContactsJ } from \"./redux/contacts/contactsOperations\";\nimport {\n  getContacts,\n  getFilter,\n  getLoader,\n  getError,\n} from \"./redux/contacts/contactsSelectors\";\n\nfunction App() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const isLoader = useSelector(getLoader);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n  const addContacts = (contact) => dispatch(addContact(contact));\n  const contactDelete = (id) => dispatch(deleteContact(id));\n  const setFilterApp = (data) => dispatch(setFilter(data));\n\n  if (error) {\n    alert(error);\n  }\n\n  useEffect(() => {\n    dispatch(getContactsJ());\n    // if (!JSON.parse(localStorage.getItem(\"contacts\"))) {\n    //   localStorage.setItem(\"contacts\", \"[]\");\n    //   return;\n    // }\n    // setContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n  }, [dispatch]);\n\n  const changeHandler = (e) => {\n    setFilterApp(e.target.value);\n  };\n\n  const deleteContactbyId = async (id) => {\n    const response = await API.deleteContactJ(id);\n    if (response.status !== 200) {\n      return alert(\"error\");\n    }\n    contactDelete(id);\n    // const updatedContacts = getContacts.filter((contact) => contact.id !== id);\n    // setContacts([...updatedContacts]);\n  };\n\n  const addContactApp = async (contact) => {\n    const newName = contact.name;\n    const names = contacts.map((contact) => contact.name.toLowerCase());\n    if (names.includes(newName.toLowerCase().trim())) {\n      alert(`${newName} is already in contact list`);\n      return;\n    }\n\n    const response = await API.addContactJ(contact);\n    if (response.status !== 201) {\n      return alert(\"error\");\n    }\n    addContacts(contact);\n  };\n\n  const filterContactsByName = () => {\n    if (contacts.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm addContact={addContactApp} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter onChange={changeHandler} />\n        {/* {contacts.length > 1 && <Filter onChange={changeHandler} />} */}\n        {isLoader && <p>loading </p>}\n        {!isLoader && (\n          <ContactList\n            contacts={filterContactsByName()}\n            onDelete={deleteContactbyId}\n          />\n        )}\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, setFilter } from \"./contactsAction\";\r\nimport { getContactsJ } from \"./contactsOperations\";\r\n\r\nconst contactReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteContact]: (state, { payload }) => {\r\n    const newContactsArray = state.filter(({ id }) => id !== payload);\r\n    return newContactsArray;\r\n  },\r\n\r\n  [getContactsJ.fulfilled]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoader = createReducer(false, {\r\n  [getContactsJ.pending]: () => true,\r\n  [getContactsJ.fulfilled]: () => false,\r\n  [getContactsJ.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [getContactsJ.rejected]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  contacts: contactReducer,\r\n  filter: filterReducer,\r\n  isLoader,\r\n  error,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}